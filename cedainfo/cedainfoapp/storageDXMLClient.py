import urllib2
import ceda_storage_pot # bindings generated by  "pyxbgen -u ceda_storage_pot.xsd -m ceda_storage_pot"
import pyxb.utils.domutils as domutils
import sys

class SpotXMLReader():
    '''
    Parse XML detailing contents & status of a spot.
    Provide methods for returning:
       storagedCurrentStatus
       timeToArchive
       list of aggregations (by id)
       list of files, by aggregation (give id, name, size)
    '''
    
    def __init__(self, id):
        uri = "http://storaged-monitor.esc.rl.ac.uk/storaged_ceda/CEDA_Fileset_File_Details_XML.php?" + id
        xml = urllib2.urlopen(uri).read()    
        self.spot = ceda_storage_pot.CreateFromDocument(xml)
    
    def getSpot(self):
        '''return whole spot object'''
        return self.spot
        
    def getSpotSummary(self):
        '''return text report of spot showing status of each aggregation'''
        text = "Spot: %s\n" % self.spot.spot_id.content()[0]
        aggregations = self.spot.aggregations.aggregation
        text += "Aggregations : %d\n" % len(aggregations)
        text += "id\tstoragedCurrentStatus\ttimeToArchive\n"
        for agg in aggregations:
            text += "%s\t%s\t%s\n" % (agg.aggregation_id.content()[0], agg.storagedCurrentStatus.content()[0], agg.timeToArchive.content()[0])
        return text
        
    def getFilesAsDict(self):
        '''get list of files in spot as dict containing (for each file):
            file_name (key)
            file_size (value)
        '''
        # get list of aggregations
        aggregations = self.spot.aggregations.aggregation
        # get list of files within this aggregation, by file_name
        files = dict()
        for agg in aggregations:
            for item in agg.file:
                '''key is file_name, value is file_size'''
                files[urllib2.unquote(item.file_name.content()[0])] = item.file_size.content()[0]
        return files
        
    def getFilesAsList(self):
        '''get simple list of all filenames in spot'''
        # get list of aggregations
        aggregations = self.spot.aggregations.aggregation
        # get list of files within this aggregation, by file_name
        files = []
        for agg in aggregations:
            for item in agg.file:
                files.append(urllib2.unquote(item.file_name.content()[0]))
        return files
                
def main():
    '''simple driver script takes 1 arg : spot name'''
    reader = SpotXMLReader(sys.argv[1])
    
    print reader.getSpotSummary()

    filesdict = reader.getFilesAsDict()
    for key, value in filesdict.items():
        print "%s\t%s" % (key, value)
        
        
if __name__=="__main__":
    main()
    
